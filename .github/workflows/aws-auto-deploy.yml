name: AWS Auto Deploy with trigger

# - This workflow is triggered on push events to the main branch.
on:
  workflow_dispatch:

jobs:
  deploy-aws-ec2:

    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - uses: actions/checkout@v4

    - name: Copy .env.example to .env
      run: cp .env.example .env

    - name: Set Up Mysql Database Configuration
      run: |
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=laravel" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=root" >> .env

    - name: Install Composer Dependencies
      run: composer install --no-ansi --no-interaction --no-progress --no-suggest

    - name: Generate Application Key
      run: php artisan key:generate

    - name: Install NPM Dependencies
      run: npm install

    - name: Build Dependencies
      run: npm run build

    - name: Add Storage Link
      run: php artisan storage:link

    - name: Run Migrations
      run: php artisan migrate --force

    - name: Directory Permission
      run: chmod -R 777 storage bootstrap/cache

    - name: Run Test
      run : ./vendor/bin/pest

    - name: Optimize Laravel
      run: php artisan optimize

    - name: Set up SSH for AWS
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/known_hosts
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        chmod 700 ~/.ssh
        echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        eval $(ssh-agent -s)
        ssh-add ~/.ssh/id_rsa

    - name: Deploy to AWS
      env:
        HOST: ${{ secrets.SSH_HOST }}
        USER: ${{ secrets.SSH_USER }}
      run: |
        ssh -o StrictHostKeyChecking=no $USER@$HOST "
          sudo chown -R $USER:$USER /var/www/html/laravel-inventory && \
          sudo chmod -R u+rwX /var/www/html/laravel-inventory && \
          cd /var/www/html/laravel-inventory && \
          git pull && \
          rm -r node_modules && \
          npm install && \
          npm run build && \
          php artisan migrate && \
          php artisan optimize:clear
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
        "
